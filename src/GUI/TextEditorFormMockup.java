package GUI;

import Runtime.JIT.Compiler;

/**
 *
 * @author Joshua Boley
 */
public class TextEditorFormMockup extends javax.swing.JInternalFrame {

    private final Compiler m_runtime;
    private String m_filePath;
    private boolean m_changed;
    
    /**
     * Creates new form TextEditorForm
     * @param interpreter
     */
    public TextEditorFormMockup(Compiler interpreter) {
        m_runtime = interpreter;
        m_filePath = null;
        m_changed = false;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spTextEditor = new javax.swing.JScrollPane();
        tpTextEditor = new javax.swing.JTextPane();
        tbCommonFuncs = new javax.swing.JToolBar();
        bttnNewFile = new javax.swing.JButton();
        bttnOpenFile = new javax.swing.JButton();
        bttnSaveFile = new javax.swing.JButton();
        sepToolBarCommonFuncs = new javax.swing.JToolBar.Separator();
        bttnRun = new javax.swing.JButton();
        mbTextEditor = new javax.swing.JMenuBar();
        jmFile = new javax.swing.JMenu();
        miFileNew = new javax.swing.JMenuItem();
        miFileOpen = new javax.swing.JMenuItem();
        miFileSaveAs = new javax.swing.JMenuItem();
        miFileSave = new javax.swing.JMenuItem();
        miFileClose = new javax.swing.JMenuItem();
        jmEdit = new javax.swing.JMenu();
        miEditCopy = new javax.swing.JMenuItem();
        miEditPaste = new javax.swing.JMenuItem();

        setPreferredSize(new java.awt.Dimension(710, 500));

        tpTextEditor.setBackground(new java.awt.Color(250, 250, 250));
        tpTextEditor.setEnabled(false);
        tpTextEditor.setMaximumSize(new java.awt.Dimension(700, 500));
        tpTextEditor.setPreferredSize(new java.awt.Dimension(700, 500));
        tpTextEditor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpTextEditorKeyTyped(evt);
            }
        });
        spTextEditor.setViewportView(tpTextEditor);

        tbCommonFuncs.setRollover(true);

        bttnNewFile.setText("New");
        bttnNewFile.setFocusable(false);
        bttnNewFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bttnNewFile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bttnNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnNewFileActionPerformed(evt);
            }
        });
        tbCommonFuncs.add(bttnNewFile);

        bttnOpenFile.setText("Open");
        bttnOpenFile.setFocusable(false);
        bttnOpenFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bttnOpenFile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bttnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnOpenFileActionPerformed(evt);
            }
        });
        tbCommonFuncs.add(bttnOpenFile);

        bttnSaveFile.setText("Save");
        bttnSaveFile.setFocusable(false);
        bttnSaveFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bttnSaveFile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbCommonFuncs.add(bttnSaveFile);
        tbCommonFuncs.add(sepToolBarCommonFuncs);

        bttnRun.setText("Run");
        bttnRun.setFocusable(false);
        bttnRun.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bttnRun.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbCommonFuncs.add(bttnRun);

        jmFile.setText("File");

        miFileNew.setText("New");
        miFileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFileNewActionPerformed(evt);
            }
        });
        jmFile.add(miFileNew);

        miFileOpen.setText("Open");
        jmFile.add(miFileOpen);

        miFileSaveAs.setText("Save As");
        jmFile.add(miFileSaveAs);

        miFileSave.setText("Save");
        jmFile.add(miFileSave);

        miFileClose.setText("Close");
        jmFile.add(miFileClose);

        mbTextEditor.add(jmFile);

        jmEdit.setText("Edit");

        miEditCopy.setText("Copy");
        jmEdit.add(miEditCopy);

        miEditPaste.setText("Paste");
        jmEdit.add(miEditPaste);

        mbTextEditor.add(jmEdit);

        setJMenuBar(mbTextEditor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spTextEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(tbCommonFuncs, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tbCommonFuncs, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(spTextEditor, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miFileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFileNewActionPerformed
        if (!this.isEnabled())
            this.setEnabled(true);
        else {
            if (m_changed) {

            }
        }
    }//GEN-LAST:event_miFileNewActionPerformed

    private void bttnNewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnNewFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bttnNewFileActionPerformed

    private void bttnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnOpenFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bttnOpenFileActionPerformed

    private void tpTextEditorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpTextEditorKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tpTextEditorKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnNewFile;
    private javax.swing.JButton bttnOpenFile;
    private javax.swing.JButton bttnRun;
    private javax.swing.JButton bttnSaveFile;
    private javax.swing.JMenu jmEdit;
    private javax.swing.JMenu jmFile;
    private javax.swing.JMenuBar mbTextEditor;
    private javax.swing.JMenuItem miEditCopy;
    private javax.swing.JMenuItem miEditPaste;
    private javax.swing.JMenuItem miFileClose;
    private javax.swing.JMenuItem miFileNew;
    private javax.swing.JMenuItem miFileOpen;
    private javax.swing.JMenuItem miFileSave;
    private javax.swing.JMenuItem miFileSaveAs;
    private javax.swing.JToolBar.Separator sepToolBarCommonFuncs;
    private javax.swing.JScrollPane spTextEditor;
    private javax.swing.JToolBar tbCommonFuncs;
    private javax.swing.JTextPane tpTextEditor;
    // End of variables declaration//GEN-END:variables
}
